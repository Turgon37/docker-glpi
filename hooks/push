#!/usr/bin/env bash
set -e
set -x

## Global settings
# image name
DOCKER_IMAGE="${DOCKER_REPO:-glpi}"


## Initialization

# if [[ ${DOCKER_REPO} =~ [^/]+/([^/]+)/([^/]+) ]]; then
  username=${DOCKERHUB_REGISTRY_USERNAME}
  repo=glpi
# else
  # echo 'ERROR: unable to extract username and repo from environment' 1>&2
  # exit 1
# fi

image_version=`cat VERSION`
image_tags=`cat ${PWD}/_tags`
image_building_name=`cat ${PWD}/_image_build`

## Login to repository

## Init conditions
[ -n "${GLPI_VERSION}" -a "${VCS_BRANCH}" != "${PRODUCTION_BRANCH}" ] && exit 0
 ## Deploy
# Authenticate to docker hub
[ "$TRAVIS_SECURE_ENV_VARS" == "true" -a  -n "${username}" -a -n "$DOCKERHUB_REGISTRY_PASSWORD" ] &&
echo "$DOCKERHUB_REGISTRY_PASSWORD" | docker login --username="${username}" --password-stdin

## Enforce versioning
for tag in $image_tags; do
  if echo "$tag" | grep -q "$image_version"; then
    if curl -s "https://hub.docker.com/v2/repositories/${username}/${repo}/tags/?page_size=100" | grep -q '"name": "'${tag}'"'; then
      echo "ERROR: Tag '${tag}' for image version '$image_version' already exists in registry" 1>&2
      exit 1
    fi
  fi
done

## Push images
for tag in $image_tags; do
  echo "=> tag image '${image_building_name}' as '${DOCKER_IMAGE}:${tag}'"
  docker tag "${image_building_name}" "${DOCKER_IMAGE}:${tag}"
  echo "=> push image '${DOCKER_IMAGE}:${tag}'"
  docker push "${DOCKER_IMAGE}:${tag}"
done
