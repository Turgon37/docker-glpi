#!/usr/bin/bash
set -e
set -x

## Global settings
# image name
DOCKER_IMAGE="${DOCKER_REPO:-glpi}"
# "production" branch
PRODUCTION_BRANCH=${PRODUCTION_BRANCH:-master}


## Local settings
alpine_version=`cat Dockerfile | grep --perl-regexp --only-matching '(?<=FROM alpine:)[0-9.]+'`
arch=`uname --machine`


## Initialization


# If empty version, fetch the latest from repository
if [ -z "$GLPI_VERSION" ]; then
  GLPI_VERSION=`curl https://api.github.com/repos/glpi-project/glpi/releases/latest | grep --perl-regexp --only-matching '(?<=tag_name": ")[a-z0-9.-]+'`
  # no glpi fixed version => latest build
  image_tags="${image_tags} latest ${GLPI_VERSION}-latest"
  test -n "$GLPI_VERSION"
fi
echo "-> selected GLPI version '${GLPI_VERSION}'"

# If empty commit, fetch the current from local git rpo
if [ -n "${SOURCE_COMMIT}" ]; then
  VCS_REF="${SOURCE_COMMIT}"
elif [ -n "${TRAVIS_COMMIT}" ]; then
  VCS_REF="${TRAVIS_COMMIT}"
else
  VCS_REF="`git rev-parse --short HEAD`"
fi
test -n "${VCS_REF}"
echo "-> current vcs reference '${VCS_REF}'"

# If empty branch, fetch the current from local git rpo
if [ -n "${SOURCE_BRANCH}" ]; then
  VCS_BRANCH="${SOURCE_BRANCH}"
elif [ -n "${TRAVIS_BRANCH}" ]; then
  VCS_BRANCH="${TRAVIS_BRANCH}"
else
  VCS_BRANCH="`git rev-parse --abbrev-ref HEAD`"
fi
test -n "${VCS_BRANCH}"
echo "-> current vcs branch '${VCS_BRANCH}'"

# set the docker tag prefix if needed
if [ "${VCS_BRANCH}" != "${PRODUCTION_BRANCH}" ]; then
  docker_tags_prefix="${VCS_BRANCH}-"
fi
echo "-> use tag prefix '${docker_tags_prefix}'"

# Get the current image static version
image_version=`cat VERSION`
echo "-> use image version '${image_version}'"

# customs tags
image_tags="${image_tags} ${GLPI_VERSION}-${image_version}"
echo "-> use image tags '${image_tags}'"

# finals
image_final_tags=""
for tag in $image_tags; do
  image_final_tags="${image_final_tags} ${docker_tags_prefix}${tag}"
done
image_final_tags=`echo ${image_final_tags} | tr ' ' '\n' | uniq | tr '\n' ' '`
echo "-> use final image tags list '${image_final_tags}'"
echo "${image_final_tags}" > ${PWD}/_tags

echo "-> use image name '${DOCKER_IMAGE}'"

image_building_name="${DOCKER_IMAGE}:building"
echo "-> use image name '${image_building_name}' for build"
echo "${image_building_name}" > ${PWD}/_image_build


## Build image
echo "=> building '${image_building_name}' with image version '${image_version}'"
docker build --build-arg "GLPI_VERSION=${GLPI_VERSION}" \
             --label 'maintainer=Wolvverine' \
             --label "org.label-schema.build-date=`date -u +'%Y-%m-%dT%H:%M:%SZ'`" \
             --label 'org.label-schema.name=glpi' \
             --label 'org.label-schema.description=GLPI web application' \
             --label 'org.label-schema.url=https://github.com/Wolvverine/docker-glpi' \
             --label "org.label-schema.vcs-ref=${VCS_REF}" \
             --label 'org.label-schema.vcs-url=https://github.com/Wolvverine/docker-glpi' \
             --label 'org.label-schema.vendor=Wolvverine' \
             --label "org.label-schema.version=${image_version}" \
             --label 'org.label-schema.schema-version=1.0' \
             --label "application.glpi.version=${GLPI_VERSION}" \
             --tag "${image_building_name}" \
             --file "${DOCKERFILE_PATH:-Dockerfile}" \
             .
