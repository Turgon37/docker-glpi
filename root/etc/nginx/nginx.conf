daemon off;

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
#worker_processes auto;
worker_processes  1;

# Configures default error logger.
error_log  stderr error;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # send access log into standard output
    access_log /proc/self/fd/1;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout 600;
    
    proxy_connect_timeout  600;
    proxy_send_timeout  600;
    proxy_read_timeout  600;
    fastcgi_send_timeout 600;
    fastcgi_read_timeout 600;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile on;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    #tcp_nopush on;

    # Enable gzipping of responses.
    #gzip on;

    # Set the Vary HTTP header as defined in the RFC 2616.
    gzip_vary on;

    # Enable checking the existence of precompressed files.
    #gzip_static on;

    server {
        ## HTTP configuration
        listen 80 default_server;
        listen [::]:80 default_server;

        ## NETWORK LIMITATIONS
        client_max_body_size 30M;
        client_body_buffer_size 128k;

        ## DIRECTORY
        root /var/www;
        index index.php;

        ## LOCATION
        location / {
            try_files $uri $uri/ =404;
        }

        location = /api/ {
            if ($http_x_forwarded_proto ~ "^https?$") {
                return 301 $http_x_forwarded_proto://$host/apirest.php;
            }
            return 301 $scheme://$host/apirest.php;
        }

        location /api {
            rewrite ^/api/(.*)$ /apirest.php/$1 last;
        }

        location = /nginx-status {
          allow 127.0.0.1;
          deny all;
          stub_status;
        }

        location ~ ^/fpm-(status|ping)$ {
          allow 127.0.0.1;
          deny all;
          include fastcgi_params;
          fastcgi_pass unix:/var/run/php-fpm.sock;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_intercept_errors on;
        }

        location ~ [^/]\.php(/|$) {
            # regex to split $uri to $fastcgi_script_name and $fastcgi_path
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Check that the PHP script exists before passing it
            try_files $fastcgi_script_name =404;

            include fastcgi_params;

            # Bypass the fact that try_files resets $fastcgi_path_info
            # # see: http://trac.nginx.org/nginx/ticket/321
            set $path_info $fastcgi_path_info;
            fastcgi_param  PATH_INFO $path_info;

            fastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_script_name;
            fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
            fastcgi_param  SERVER_NAME        $host;

            # allow directory index
            fastcgi_index index.php;
            fastcgi_pass unix:/var/run/php-fpm.sock;
        }

        # deny access to some ressources
        location ~ /(config|files)/ {
            deny all;
        }
    }
}